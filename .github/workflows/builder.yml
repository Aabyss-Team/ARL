# This is a basic workflow to help you get started with Actions

name: build amd64 image

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_URL: tophant/arl

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master

      - name: Download GeoLite2
        run: |
          pwd
          mkdir -p docker/GeoLite2/
          wget -O docker/GeoLite2/GeoLite2-ASN.mmdb  https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb
          wget -O docker/GeoLite2/GeoLite2-City.mmdb https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-City.mmdb
          ls -al docker/GeoLite2

      - name: Download ncrack
        run: |
          wget -O docker/ncrack  https://github.com/Aabyss-Team/arl_files/raw/master/ncrack
          wget -O docker/ncrack-services https://github.com/Aabyss-Team/arl_files/raw/master/ncrack-services
          chmod +x docker/ncrack

      - name: Download NPoC
        run: |
          git clone https://github.com/Aabyss-Team/ARL-NPoC docker/ARL-NPoC

      # Runs a single command using the runners shell
      - name: Login Registry
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Runs a set of commands using the runners shell
      - name: Build Docker image
        run: |
          export VERSION=$(cat version.txt)
          docker build -t ${IMAGE_URL}:${VERSION} -f docker/worker/Dockerfile .

      - name: Publish
        run: |
          export VERSION=$(cat version.txt)
          docker push ${IMAGE_URL}:${VERSION}


