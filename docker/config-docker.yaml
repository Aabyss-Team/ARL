CELERY:
  BROKER_URL : "amqp://arl:arlpassword@rabbitmq:5672/arlv2host"


MONGO:
  URI : 'mongodb://admin:admin@mongodb:27017/'
  DB : 'arl'



#GeoIP 数据库文件配置项
GEOIP:
  CITY: '/data/GeoLite2/GeoLite2-City.mmdb'
  ASN: '/data/GeoLite2/GeoLite2-ASN.mmdb'


#Fofa API 配置项
FOFA:
  URL: "https://fofa.info"
  EMAIL: "已经不需要配置了"
  KEY: ""
  MAX_PAGE: 5
  PAGE_SIZE: 2000


# 利用三方API进行域名收集
# 测试命令 python3.6 -m test.test_query_plugin [source1] [source2]
# 域名查询插件配置, enable 字段可以单独控制是否启用该插件，如果没有这个字段也会默认启用
QUERY_PLUGIN:
  alienvault:
    enable: true
  certspotter: # https://www.certspotter.com/
    after_id: 1
    max_page: 3
    enable: true
  crtsh:
    enable: true
  fofa:  # fofa 的key配置在上面
    enable: true
  hunter_qax: # 网站 https://hunter.qianxin.com/
    api_key: ""
    page_size: 100
    max_page: 5
    enable: false
  passivetotal: # 请前往 https://community.riskiq.com/ 注册自己的key并替换
    auth_email: ""
    auth_key: ""
    enable: false
  quake_360: # 网站 https://quake.360.cn/
    quake_token: ""
    max_size: 500
    enable: false
  rapiddns:
    enable: true
  securitytrails: # 网站 https://securitytrails.com/
    api_key: ""
    enable: false
  virustotal: # 网站 https://www.virustotal.com/gui/
    api_key: ""
    enable: false
  zoomeye:
    api_key: ""
    max_page: 20
    enable: false
  chaos:
    api_key: ""
    enable: false


#*** 监控任务消息推送配置 ****
#监控任务消息推送配置，支持钉钉，飞书，企业微信，邮件
#如果不需要推送，可以将所有配置项都留空
#文档：https://tophanttechnology.github.io/ARL-doc/config_option/?h=%E6%B6%88%E6%81%AF#_1
#钉钉消息推送配置
#钉钉添加机器人，请查看
#https://github.com/TophantTechnology/ARL/wiki/ARL%202.3%20%E6%96%B0%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD%E8%AF%B4%E6%98%8E
DINGDING:
  SECRET: ""
  ACCESS_TOKEN: ""

#邮件推送配置
EMAIL:
  HOST: ""
  PORT: ""
  USERNAME: ""
  PASSWORD: ""
  TO: ""

#飞书消息推送配置, 需要设置签名校验
#https://open.feishu.cn/document/client-docs/bot-v3/add-custom-bot
FEISHU:
  WEBHOOK_URL: ""
  SECRET: ""


#企业微信消息推送配置
#https://open.work.weixin.qq.com/help2/pc/14931
WXWORK:
  WEBHOOK_URL: ""

# 监控任务 WEBHOOK 配置
# IP/域名监控和站点监控结束后会往下面的URL POST提交JSON数据
# 为了验证身份会在Header中带上Token 字段
# 进入容器测试  docker compose exec worker bash
# 测试命令 python3.6 -m test.test_webhook <task_id> <scope_id>
WEBHOOK:
  URL: ""
  TOKEN: ""


#GITHUB 搜索 TOKEN
GITHUB:
  TOKEN: ""

#代理配置项，如"http://127.0.0.1:8080", 端口扫描不会走代理
PROXY:
  HTTP_URL: ""

ARL:
  AUTH: true
  #API 认证key, 可以访问api/doc查看文档
  API_KEY: ""
  BLACK_IPS:
    - 127.0.0.0/8
    - 0.0.0.0/8
    - 172.16.0.0/12
    - 100.64.0.0/10
    #- 10.0.0.0/8
    #- 192.168.0.0/16
  ## 禁止域名，不可为空数组
  FORBIDDEN_DOMAINS:
    - edu.cn
    - org.cn
    - gov.cn
  #端口对应前端测试选项
  PORT_TOP_10: "80,443,8443,8080,8081,8888,8089,5000,5001,8085,800,81,9000,88,8001,8090"
  #域名爆破字典前端大字典选项
  DOMAIN_DICT: "/code/app/dicts/domain_2w.txt"
  #文件泄漏字典
  FILE_LEAK_DICT: "/code/app/dicts/file_top_2000.txt"

  #域名爆破并发数
  DOMAIN_BRUTE_CONCURRENT: 300
  #组合生成的域名爆破并发数
  ALT_DNS_CONCURRENT: 1500
